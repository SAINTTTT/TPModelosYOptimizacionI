def dijkstra(graph, start, end):
    distances = {} 
    predecessors = {} 
    
    to_assess = graph.keys() 

    for node in graph:
        distances[node] = float('inf')
        predecessors[node] = None
    
    sp_set = []

    distances[start] = 0
    
    while len(sp_set) < len(to_assess):

        still_in = {node: distances[node]\
                    for node in [node for node in\
                    to_assess if node not in sp_set]}

        closest = min(still_in, key = distances.get)

        sp_set.append(closest)
        
        
        for node in graph[closest]:
            if distances[node] > distances[closest] +\
                       graph[closest][node]:

                distances[node] = distances[closest] +\
                       graph[closest][node]

                predecessors[node] = closest
                
    path = [end]
    while start not in path:
        path.append(predecessors[path[-1]])
    
   
    return path[::-1], distances[end]


if __name__ == '__main__':
    graph = {
        '1': {'11': 6, '12': 9,'13': 5,'14': 1,'15': 5,'16': 9,'18': 4,'20': 5},
        '2': {'12': 9, '13': 5, '14': 2, '15': 5, '16': 9, '17': 10, '19': 4},
        '3': {'9': 9, '13': 5, '14': 1, '15': 5, '16': 9, '18': 4, '20': 5},
        '4': {'9': 9, '10': 8, '15': 5, '16': 9, '17': 10, '19': 4},
        '5': {'9': 9, '10': 8, '11': 6, '14': 1, '15': 5, '16': 9, '17': 10, '18': 4, '20': 5},
        '6': {'9': 9, '10': 8, '11': 6, '12': 9, '13': 5, '16': 9, '17': 10, '18': 4, '19': 4},
        '7': {'9': 9, '10': 8, '11': 6, '12': 9, '13': 5, '17': 10, '18': 4 ,'19': 4, '20': 5},
        '8': {'9': 9, '10': 8, '11': 6, '12': 9, '13': 5, '14': 1, '17': 10, '18': 4, '19': 4, '20': 5},
        '9': {'1': 8, '2': 10, '3': 9, '4': 7, '5': 3, '6': 9, '7': 10, '8': 2, '19': 4, '20': 5},
        '10': {'4': 7, '5': 3, '6': 9, '7': 10, '8': 2, '20': 5},
        '11': {'1': 8, '5': 3, '6': 9, '7': 10, '8': 2, '17': 10},
        '12': {'1': 8, '2': 10, '6': 9, '7': 10, '8': 2, '17': 10, '18': 4},
        '13': {'1': 8, '2': 10, '3': 9, '7': 10, '8': 2, '17': 10, '18': 4, '19': 4},
        '14': {'1': 8, '2': 10, '3': 9, '4': 7, '8': 2, '17': 10, '18': 4, '19': 4, '20': 5},
        '15': {'1': 8, '2': 10, '3': 9, '4': 7, '5': 3, '9': 9, '17': 10, '18': 4, '19': 4, '20': 5},
        '16': {'1': 8, '2': 10, '3': 9, '4': 7, '5': 3, '6': 9, '17': 10, '18': 4, '19': 4, '20': 5},
        '17': {'2': 10, '4': 7, '5': 3, '6': 9, '7': 10, '8': 2, '11': 6, '12': 9, '13': 5, '14': 1, '15': 5, '16': 9},
        '18': {'1': 8, '3': 9, '5': 3, '6': 9, '7': 10, '8': 2, '12': 9, '13': 5, '14': 1, '15': 5, '16': 9},
        '19': {'2': 10, '4': 7, '6': 9, '7': 10, '8': 2, '9': 9, '13': 5, '14': 1, '15': 5, '16': 9},
        '20': {'1': 8, '3': 9, '5': 3, '7': 10, '8': 2, '9': 9, '10': 8, '14': 1, '15': 5, '16': 9}
    }

    
    for i in range(1,20):
        for j in range(1,20):
            if(i!=j):
                p, d = dijkstra(graph, start=str(i), end=str(j))
        
                if(len(p)<4):
                    print ("\nPath start with "+str(i)+" and ending with "+str(j)+":\n==============================")
                    print (p)
                    print ("\nShortest Distance:\n==============================")
                    print (d)
                    print ("\n")